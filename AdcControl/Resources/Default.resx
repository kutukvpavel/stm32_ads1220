<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="strStartButton" xml:space="preserve">
    <value>Start recording</value>
  </data>
  <data name="strClearScreenButton" xml:space="preserve">
    <value>Clear screen</value>
  </data>
  <data name="strStopButton" xml:space="preserve">
    <value>Stop recording</value>
  </data>
  <data name="strConnectButton" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="strDisconnectButton" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="strConfigButton" xml:space="preserve">
    <value>Connection configuration</value>
  </data>
  <data name="strExportButton" xml:space="preserve">
    <value>Export data as CSV</value>
  </data>
  <data name="msgExceptionOverride" xml:space="preserve">
    <value>User opted to proceed after an unhandled exception.</value>
  </data>
  <data name="msgPortOpenProblem" xml:space="preserve">
    <value>Can't open serial port!</value>
  </data>
  <data name="msgPortAlreadyOpen" xml:space="preserve">
    <value>The port is already open, reopening.</value>
  </data>
  <data name="msgPortCloseProblem" xml:space="preserve">
    <value>Can't close the port!</value>
  </data>
  <data name="msgPortWriteError" xml:space="preserve">
    <value>Port write error!</value>
  </data>
  <data name="stsConnecting" xml:space="preserve">
    <value>Connecting...</value>
  </data>
  <data name="stsConnected" xml:space="preserve">
    <value>Device connected.</value>
  </data>
  <data name="stsStartingAcq" xml:space="preserve">
    <value>Starting acquisition...</value>
  </data>
  <data name="stsStoppingAcq" xml:space="preserve">
    <value>Stopping acquisition...</value>
  </data>
  <data name="stsAcqInProgress" xml:space="preserve">
    <value>Acquisition in progress...</value>
  </data>
  <data name="stsReady" xml:space="preserve">
    <value>Ready.</value>
  </data>
  <data name="stsFailure" xml:space="preserve">
    <value>Something went wrong. Check the log for details.</value>
  </data>
  <data name="lblPortName" xml:space="preserve">
    <value>Port name:</value>
  </data>
  <data name="strOKButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="strCancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lblAveraging" xml:space="preserve">
    <value>Averaging window size:</value>
  </data>
  <data name="msgInvalidPortSetting" xml:space="preserve">
    <value>Selected port name is invalid!</value>
  </data>
  <data name="lblAcqDuration" xml:space="preserve">
    <value>Acquisition duration (s):</value>
  </data>
  <data name="msgParsingProblem" xml:space="preserve">
    <value>Can't parse following data:</value>
  </data>
  <data name="msgAdcChannelConcurrency" xml:space="preserve">
    <value>Race condition detected for AdcChannel object.</value>
  </data>
  <data name="msgFatalContinue" xml:space="preserve">
    <value>Continue?</value>
  </data>
  <data name="msgTerminalTimeout" xml:space="preserve">
    <value>Timeout while waiting for terminal!</value>
  </data>
  <data name="msgControllerTimeout" xml:space="preserve">
    <value>Timed out while waiting in command queue.</value>
  </data>
  <data name="stsDisconnected" xml:space="preserve">
    <value>Disconnected.</value>
  </data>
  <data name="msgCsvSaveFailed" xml:space="preserve">
    <value>Can't save CSV file.</value>
  </data>
  <data name="stsCsvSaveFailed" xml:space="preserve">
    <value>Failed to save one or more channels.</value>
  </data>
  <data name="stsCsvSaveSuccess" xml:space="preserve">
    <value>All channels saved.</value>
  </data>
  <data name="stsAcqCompleted" xml:space="preserve">
    <value>Acquisition completed.</value>
  </data>
  <data name="stsCommandCompleted" xml:space="preserve">
    <value>Command completed.</value>
  </data>
  <data name="strForceRender" xml:space="preserve">
    <value>Force plot update</value>
  </data>
  <data name="msgChannelPlotConcurrency" xml:space="preserve">
    <value>Failed to add new channel to plotted channels.</value>
  </data>
  <data name="msgUpdateChannelPlotFailed" xml:space="preserve">
    <value>Can't update channel data array, used by the plot.</value>
  </data>
  <data name="msgCantCheckPortExistence" xml:space="preserve">
    <value></value>
  </data>
</root>