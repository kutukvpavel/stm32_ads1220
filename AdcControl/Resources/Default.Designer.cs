//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdcControl.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Default {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Default() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AdcControl.Resources.Default", typeof(Default).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autosave.
        /// </summary>
        public static string catAutosave {
            get {
                return ResourceManager.GetString("catAutosave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Axes.
        /// </summary>
        public static string catAxes {
            get {
                return ResourceManager.GetString("catAxes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string catGeneral {
            get {
                return ResourceManager.GetString("catGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Main Window.
        /// </summary>
        public static string catMainWindow {
            get {
                return ResourceManager.GetString("catMainWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Plot.
        /// </summary>
        public static string catPlot {
            get {
                return ResourceManager.GetString("catPlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Real-time Table.
        /// </summary>
        public static string catRealTimeTable {
            get {
                return ResourceManager.GetString("catRealTimeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Terminal.
        /// </summary>
        public static string catTerminal {
            get {
                return ResourceManager.GetString("catTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of last autosaved files to keep..
        /// </summary>
        public static string desAutosaveLimit {
            get {
                return ResourceManager.GetString("desAutosaveLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In seconds..
        /// </summary>
        public static string desAutosavePeriod {
            get {
                return ResourceManager.GetString("desAutosavePeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на See String.Fromat() documentation. Arguments provided: {0} = code, {1} = name, {2} = start time (UTC), {3} = moving average window width, {4} = drop every N&apos;th point, {5} = math expression Y..
        /// </summary>
        public static string desChannelInfoFormat {
            get {
                return ResourceManager.GetString("desChannelInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Concatenation line label format as per C# format specifiers documentation. Arguments provided: {0} - time offset in seconds since last acquisition ended..
        /// </summary>
        public static string desConcatLabelFormat {
            get {
                return ResourceManager.GetString("desConcatLabelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drop N-1 points out of N..
        /// </summary>
        public static string desDropPoints {
            get {
                return ResourceManager.GetString("desDropPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mouse coordinates update period (shown in the status bar), milliseconds..
        /// </summary>
        public static string desMouseRefreshPeriod {
            get {
                return ResourceManager.GetString("desMouseRefreshPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number format string as per C# double.ToString(string format) documentation..
        /// </summary>
        public static string desNumberFormat {
            get {
                return ResourceManager.GetString("desNumberFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Plot data and layout refresh period, milliseconds..
        /// </summary>
        public static string desPlotRefreshPeriod {
            get {
                return ResourceManager.GetString("desPlotRefreshPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Row limit..
        /// </summary>
        public static string desRealTimeTableLimit {
            get {
                return ResourceManager.GetString("desRealTimeTableLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Relative path only (starts with a left slash)!.
        /// </summary>
        public static string desRelativePath {
            get {
                return ResourceManager.GetString("desRelativePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use semicolons (;) as CSV separators and use commas (,) as decimal separators..
        /// </summary>
        public static string desRussianCompatibility {
            get {
                return ResourceManager.GetString("desRussianCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Terminal buffer size limit (characters)..
        /// </summary>
        public static string desTerminalLimit {
            get {
                return ResourceManager.GetString("desTerminalLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of characters to remove once the Terminal Limit is reached..
        /// </summary>
        public static string desTerminalRemoveStep {
            get {
                return ResourceManager.GetString("desTerminalRemoveStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Acquisition duration (s):.
        /// </summary>
        public static string lblAcqDuration {
            get {
                return ResourceManager.GetString("lblAcqDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Averaging window size:.
        /// </summary>
        public static string lblAveraging {
            get {
                return ResourceManager.GetString("lblAveraging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter one element per line, format: XX=XXXX..
        /// </summary>
        public static string lblCollectionSettingPrompt {
            get {
                return ResourceManager.GetString("lblCollectionSettingPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port name:.
        /// </summary>
        public static string lblPortName {
            get {
                return ResourceManager.GetString("lblPortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Race condition detected for AdcChannel object..
        /// </summary>
        public static string msgAdcChannelConcurrency {
            get {
                return ResourceManager.GetString("msgAdcChannelConcurrency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exiting....
        /// </summary>
        public static string msgApplicationExit {
            get {
                return ResourceManager.GetString("msgApplicationExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t check if selected serial port exists..
        /// </summary>
        public static string msgCantCheckPortExistence {
            get {
                return ResourceManager.GetString("msgCantCheckPortExistence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to create a directory for CSV export..
        /// </summary>
        public static string msgCantCreateCsvDirectory {
            get {
                return ResourceManager.GetString("msgCantCreateCsvDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to delete an old autosaved file..
        /// </summary>
        public static string msgCantDeleteOldAutosave {
            get {
                return ResourceManager.GetString("msgCantDeleteOldAutosave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to open export folder in Explorer..
        /// </summary>
        public static string msgCantOpenExportFolder {
            get {
                return ResourceManager.GetString("msgCantOpenExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to plot concatenation line..
        /// </summary>
        public static string msgCantPlotConcatLine {
            get {
                return ResourceManager.GetString("msgCantPlotConcatLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to update ADC channel array..
        /// </summary>
        public static string msgChannelArrayUpdateError {
            get {
                return ResourceManager.GetString("msgChannelArrayUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Timed out while waiting in command queue..
        /// </summary>
        public static string msgControllerTimeout {
            get {
                return ResourceManager.GetString("msgControllerTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File already exists. Overwrite?.
        /// </summary>
        public static string msgCsvAlreadyExistsReplace {
            get {
                return ResourceManager.GetString("msgCsvAlreadyExistsReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t save CSV file..
        /// </summary>
        public static string msgCsvSaveFailed {
            get {
                return ResourceManager.GetString("msgCsvSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deleted an old autosaved file..
        /// </summary>
        public static string msgDeletedOldAutosave {
            get {
                return ResourceManager.GetString("msgDeletedOldAutosave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User opted to proceed after an unhandled exception..
        /// </summary>
        public static string msgExceptionOverride {
            get {
                return ResourceManager.GetString("msgExceptionOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to recalculate one or more channels..
        /// </summary>
        public static string msgFailedRecalaulation {
            get {
                return ResourceManager.GetString("msgFailedRecalaulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to save experiment info..
        /// </summary>
        public static string msgFailedToSaveInfo {
            get {
                return ResourceManager.GetString("msgFailedToSaveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to write a CSV record, trying to resume....
        /// </summary>
        public static string msgFailedToWriteCsvRecord {
            get {
                return ResourceManager.GetString("msgFailedToWriteCsvRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue?.
        /// </summary>
        public static string msgFatalContinue {
            get {
                return ResourceManager.GetString("msgFatalContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t check whether experiment file already exists or not..
        /// </summary>
        public static string msgFileExistenceCheckFailed {
            get {
                return ResourceManager.GetString("msgFileExistenceCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Caught an exception during InputBox validation..
        /// </summary>
        public static string msgInputBoxValidationError {
            get {
                return ResourceManager.GetString("msgInputBoxValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected port name is invalid!.
        /// </summary>
        public static string msgInvalidPortSetting {
            get {
                return ResourceManager.GetString("msgInvalidPortSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Main window loaded..
        /// </summary>
        public static string msgLoadedMainWindow {
            get {
                return ResourceManager.GetString("msgLoadedMainWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to compute math expression for point..
        /// </summary>
        public static string msgMathError {
            get {
                return ResourceManager.GetString("msgMathError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t parse following data:.
        /// </summary>
        public static string msgParsingProblem {
            get {
                return ResourceManager.GetString("msgParsingProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The port is already open, reopening..
        /// </summary>
        public static string msgPortAlreadyOpen {
            get {
                return ResourceManager.GetString("msgPortAlreadyOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t close the port!.
        /// </summary>
        public static string msgPortCloseProblem {
            get {
                return ResourceManager.GetString("msgPortCloseProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t open serial port!.
        /// </summary>
        public static string msgPortOpenProblem {
            get {
                return ResourceManager.GetString("msgPortOpenProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port write error!.
        /// </summary>
        public static string msgPortWriteError {
            get {
                return ResourceManager.GetString("msgPortWriteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t prevent sleep..
        /// </summary>
        public static string msgPowerManagementFail {
            get {
                return ResourceManager.GetString("msgPowerManagementFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sleep prevention was successful..
        /// </summary>
        public static string msgPowerManagementOK {
            get {
                return ResourceManager.GetString("msgPowerManagementOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exported data to CSV file..
        /// </summary>
        public static string msgSuccessfullyExportedToFile {
            get {
                return ResourceManager.GetString("msgSuccessfullyExportedToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unrecognized export error..
        /// </summary>
        public static string msgUnknownExportError {
            get {
                return ResourceManager.GetString("msgUnknownExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculated voltage axis format.
        /// </summary>
        public static string namCalcYFormat {
            get {
                return ResourceManager.GetString("namCalcYFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Channel Info Format.
        /// </summary>
        public static string namChannelInfoFormat {
            get {
                return ResourceManager.GetString("namChannelInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Concatenation label format.
        /// </summary>
        public static string namConcatLabelFormat {
            get {
                return ResourceManager.GetString("namConcatLabelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Concatenation line width.
        /// </summary>
        public static string namConcatLineWidth {
            get {
                return ResourceManager.GetString("namConcatLineWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DAC Current axis (right) label text.
        /// </summary>
        public static string namCurrentAxisLabel {
            get {
                return ResourceManager.GetString("namCurrentAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DAC Current axis (right) format.
        /// </summary>
        public static string namCurrentFormat {
            get {
                return ResourceManager.GetString("namCurrentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drop Points.
        /// </summary>
        public static string namDropPoints {
            get {
                return ResourceManager.GetString("namDropPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable Autoscaling.
        /// </summary>
        public static string namEnableAutoscaling {
            get {
                return ResourceManager.GetString("namEnableAutoscaling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable Autoscroll.
        /// </summary>
        public static string namEnableAutoscroll {
            get {
                return ResourceManager.GetString("namEnableAutoscroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculated X Column Name.
        /// </summary>
        public static string namExportCalculatedX {
            get {
                return ResourceManager.GetString("namExportCalculatedX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculated Y Column Name.
        /// </summary>
        public static string namExportCalculatedY {
            get {
                return ResourceManager.GetString("namExportCalculatedY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raw X Column Name.
        /// </summary>
        public static string namExportRawX {
            get {
                return ResourceManager.GetString("namExportRawX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raw Y Column Name.
        /// </summary>
        public static string namExportRawY {
            get {
                return ResourceManager.GetString("namExportRawY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Limit.
        /// </summary>
        public static string namLimit {
            get {
                return ResourceManager.GetString("namLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Line Wifth.
        /// </summary>
        public static string namLineWidth {
            get {
                return ResourceManager.GetString("namLineWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mouse Refresh Period.
        /// </summary>
        public static string namMouseRefreshPeriod {
            get {
                return ResourceManager.GetString("namMouseRefreshPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path.
        /// </summary>
        public static string namPath {
            get {
                return ResourceManager.GetString("namPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Period.
        /// </summary>
        public static string namPeriod {
            get {
                return ResourceManager.GetString("namPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Refresh Period.
        /// </summary>
        public static string namPlotRefreshPeriod {
            get {
                return ResourceManager.GetString("namPlotRefreshPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current axis (right) max value.
        /// </summary>
        public static string namRightYMax {
            get {
                return ResourceManager.GetString("namRightYMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current axis (right) min value.
        /// </summary>
        public static string namRightYMin {
            get {
                return ResourceManager.GetString("namRightYMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Russian Compatibility.
        /// </summary>
        public static string namRussianCompatibility {
            get {
                return ResourceManager.GetString("namRussianCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Terminal Erase Step.
        /// </summary>
        public static string namTerminalRemoveStep {
            get {
                return ResourceManager.GetString("namTerminalRemoveStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на X Axis Label.
        /// </summary>
        public static string namXAxisLabel {
            get {
                return ResourceManager.GetString("namXAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на X Axis Max Value.
        /// </summary>
        public static string namXMax {
            get {
                return ResourceManager.GetString("namXMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на X Axis Min Value.
        /// </summary>
        public static string namXMin {
            get {
                return ResourceManager.GetString("namXMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Y Axis Label.
        /// </summary>
        public static string namYAxisLabel {
            get {
                return ResourceManager.GetString("namYAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Y Axis Max Value.
        /// </summary>
        public static string namYMax {
            get {
                return ResourceManager.GetString("namYMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Y Axis Min Value.
        /// </summary>
        public static string namYMin {
            get {
                return ResourceManager.GetString("namYMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ADC Control Application.
        /// </summary>
        public static string strApplicationNameCaption {
            get {
                return ResourceManager.GetString("strApplicationNameCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Toggle autoscroll.
        /// </summary>
        public static string strAutoscroll {
            get {
                return ResourceManager.GetString("strAutoscroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string strCancelButton {
            get {
                return ResourceManager.GetString("strCancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear screen.
        /// </summary>
        public static string strClearScreenButton {
            get {
                return ResourceManager.GetString("strClearScreenButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection and controller configuration.
        /// </summary>
        public static string strConfigButton {
            get {
                return ResourceManager.GetString("strConfigButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Channel configuration.
        /// </summary>
        public static string strConfigChannels {
            get {
                return ResourceManager.GetString("strConfigChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        public static string strConnectButton {
            get {
                return ResourceManager.GetString("strConnectButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calc X.
        /// </summary>
        public static string strDefaultCalcX {
            get {
                return ResourceManager.GetString("strDefaultCalcX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calc Y.
        /// </summary>
        public static string strDefaultCalcY {
            get {
                return ResourceManager.GetString("strDefaultCalcY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Channel {0:X} = {1}, acquisition started: {2},
        ///    moving average window width: {3}, drop every N&apos;th point: {4},
        ///    math expression Y: {5}..
        /// </summary>
        public static string strDefaultChannelInfoFormat {
            get {
                return ResourceManager.GetString("strDefaultChannelInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raw X.
        /// </summary>
        public static string strDefaultRawX {
            get {
                return ResourceManager.GetString("strDefaultRawX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raw Y.
        /// </summary>
        public static string strDefaultRawY {
            get {
                return ResourceManager.GetString("strDefaultRawY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time, s.
        /// </summary>
        public static string strDefaultXAxisLabel {
            get {
                return ResourceManager.GetString("strDefaultXAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Channel Voltage, V.
        /// </summary>
        public static string strDefaultYAxisLabel {
            get {
                return ResourceManager.GetString("strDefaultYAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        public static string strDisconnectButton {
            get {
                return ResourceManager.GetString("strDisconnectButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Toggle autoscaling.
        /// </summary>
        public static string strEnableAutoAxis {
            get {
                return ResourceManager.GetString("strEnableAutoAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter experiment name:.
        /// </summary>
        public static string strEnterExperimentName {
            get {
                return ResourceManager.GetString("strEnterExperimentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter math expression below. Available arguments: y = voltage (V), x = time (s)..
        /// </summary>
        public static string strEnterMathExpression {
            get {
                return ResourceManager.GetString("strEnterMathExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DAC Control.
        /// </summary>
        public static string strExpanderDac {
            get {
                return ResourceManager.GetString("strExpanderDac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Real-time table.
        /// </summary>
        public static string strExpanderTable {
            get {
                return ResourceManager.GetString("strExpanderTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export data as CSV.
        /// </summary>
        public static string strExportButton {
            get {
                return ResourceManager.GetString("strExportButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export configuration.
        /// </summary>
        public static string strExportConfig {
            get {
                return ResourceManager.GetString("strExportConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Faraday&apos;s Constant.
        /// </summary>
        public static string strFaradaysConstant {
            get {
                return ResourceManager.GetString("strFaradaysConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Force plot update.
        /// </summary>
        public static string strForceRender {
            get {
                return ResourceManager.GetString("strForceRender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ideal Gas Constant.
        /// </summary>
        public static string strIdealGasConstant {
            get {
                return ResourceManager.GetString("strIdealGasConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Prevent X Axis Autoscaling.
        /// </summary>
        public static string strLockHorizontalAxis {
            get {
                return ResourceManager.GetString("strLockHorizontalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lock current axis (right).
        /// </summary>
        public static string strLockRightAxis {
            get {
                return ResourceManager.GetString("strLockRightAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Prevent Y Axis Autoscaling.
        /// </summary>
        public static string strLockVerticalAxis {
            get {
                return ResourceManager.GetString("strLockVerticalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Math configuration.
        /// </summary>
        public static string strMathConfig {
            get {
                return ResourceManager.GetString("strMathConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Available constants: {0}; arguments: {1}..
        /// </summary>
        public static string strMathEditingHelp {
            get {
                return ResourceManager.GetString("strMathEditingHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string strOKButton {
            get {
                return ResourceManager.GetString("strOKButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open export folder.
        /// </summary>
        public static string strOpenExportFolder {
            get {
                return ResourceManager.GetString("strOpenExportFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start recording.
        /// </summary>
        public static string strStartButton {
            get {
                return ResourceManager.GetString("strStartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status Bits.
        /// </summary>
        public static string strStatusBitsExpander {
            get {
                return ResourceManager.GetString("strStatusBitsExpander", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data acquisition in progress. Exit anyway?.
        /// </summary>
        public static string strStopAcquisitionBeforeExiting {
            get {
                return ResourceManager.GetString("strStopAcquisitionBeforeExiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop recording.
        /// </summary>
        public static string strStopButton {
            get {
                return ResourceManager.GetString("strStopButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Terminal.
        /// </summary>
        public static string strTerminalHeader {
            get {
                return ResourceManager.GetString("strTerminalHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View configuration.
        /// </summary>
        public static string strViewConfig {
            get {
                return ResourceManager.GetString("strViewConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Acquisition completed..
        /// </summary>
        public static string stsAcqCompleted {
            get {
                return ResourceManager.GetString("stsAcqCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Acquisition in progress....
        /// </summary>
        public static string stsAcqInProgress {
            get {
                return ResourceManager.GetString("stsAcqInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Command completed..
        /// </summary>
        public static string stsCommandCompleted {
            get {
                return ResourceManager.GetString("stsCommandCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Device connected..
        /// </summary>
        public static string stsConnected {
            get {
                return ResourceManager.GetString("stsConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting....
        /// </summary>
        public static string stsConnecting {
            get {
                return ResourceManager.GetString("stsConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to save one or more channels..
        /// </summary>
        public static string stsCsvSaveFailed {
            get {
                return ResourceManager.GetString("stsCsvSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Saving CSV....
        /// </summary>
        public static string stsCsvSaveInProgress {
            get {
                return ResourceManager.GetString("stsCsvSaveInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All channels saved..
        /// </summary>
        public static string stsCsvSaveSuccess {
            get {
                return ResourceManager.GetString("stsCsvSaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnected..
        /// </summary>
        public static string stsDisconnected {
            get {
                return ResourceManager.GetString("stsDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Something went wrong. Check the log for details..
        /// </summary>
        public static string stsFailure {
            get {
                return ResourceManager.GetString("stsFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ready..
        /// </summary>
        public static string stsReady {
            get {
                return ResourceManager.GetString("stsReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Recalculated all channels..
        /// </summary>
        public static string stsRecalculated {
            get {
                return ResourceManager.GetString("stsRecalculated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Recalculating data....
        /// </summary>
        public static string stsRecalculating {
            get {
                return ResourceManager.GetString("stsRecalculating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starting acquisition....
        /// </summary>
        public static string stsStartingAcq {
            get {
                return ResourceManager.GetString("stsStartingAcq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stopping acquisition....
        /// </summary>
        public static string stsStoppingAcq {
            get {
                return ResourceManager.GetString("stsStoppingAcq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unexpected disconnect! Check the connection!.
        /// </summary>
        public static string stsUnexpectedDisconnect {
            get {
                return ResourceManager.GetString("stsUnexpectedDisconnect", resourceCulture);
            }
        }
    }
}
